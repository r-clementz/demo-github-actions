name: Node.js CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  api-tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
 
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
      # install newman globally so we can run
      # postman collections
    - run: npm install -g newman 
      # install pm2 so we can run our node.js
      # based backend without blocking the terminal
    - run: npm install -g pm2
      # Copy db-template to realdb
    #- run: cp backend/databse/bookshop-template.db backend/database/bookshop.db
      # start up our backend
    - run: pm2 start backend/index.js
      # run our api tests
    - run: npm run api-tests

  wdio-tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
 
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
      # npm install cos each job is done with each machine (run paralell)
    - run: npm ci
      # build our react project to the dist folder
    - run: npm run build
      # install pm2 so we can run our node.js
      # based backend without blocking the terminal
    - run: npm install -g pm2
      # Copy db-template to realdb
    #- run: cp backend/databse/bookshop-template.db backend/database/bookshop.db
      # start up our backend
    - run: pm2 start backend/index.js
      # install Chrome (latest stable version) potentially not necessary
    - run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - run: sudo apt install ./google-chrome-stable_current_amd64.deb
      # run the WebDriverIO tests
    - run: HEADLESS_CHROME=yes WDIO_LOG_LEVEL=warn npm run wdio

  jest-tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
 
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
      # build our react project to the dist folder
    - run: npm run build
      # install pm2 so we can run our node.js
      # based backend without blocking the terminal
    - run: npm install -g pm2
      # Copy db-template to realdb
    - run: cp backend/databse/bookshop-template.db backend/database/bookshop.db
      # start up our backend because the methods
      # we are unit testing calls the backend
    - run: pm2 start backend/index.js
      # run the unit tests
    - run: npm run unit-tests

  golive:
    # demand that the 3 tests jobs suceeed before running go love
    needs: [api-tests,wdio-tests,jest-tests]
    #Only run this job if the environment protection rules are fulfilled
    # (this case, reviewer need to approves and we need to be on dev branch)
    environment: "Dev server"
    runs-on: ubuntu-latest
    steps:
      #call check out sever to checkout/pull our repo
    - run: curl http://sub.yogadev.se/${{secrets.DEPLOYMENT_KEY}}